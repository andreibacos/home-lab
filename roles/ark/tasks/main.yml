---
- name: Create ARK Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    # owner: "{{ username }}"
    # group: "{{ username }}"
    # mode: '0755'
  with_items:
    - "{{ ark_data_directory }}/{{ ark_container_name }}"
    - "{{ ark_data_directory }}/cluster"

- name: ARK
  community.docker.docker_container:
    name: "{{ ark_container_name }}"
    image: hermsi/ark-server
    pull: true
    volumes:
      - "{{ ark_data_directory }}/{{ ark_container_name }}:/app:rw"
      - "{{ ark_data_directory }}/{{ ark_container_name }}/backup:/home/steam/ARK-Backups:rw"
      - "{{ ark_data_directory }}/cluster:/app/cluster:rw"
    ports:
      - "{{ ark_query_port }}:{{ ark_query_port }}/udp"
      - "{{ ark_game_port }}:{{ ark_game_port }}/udp"
      - "{{ ark_game_port|int + 1 }}:{{ ark_game_port|int + 1 }}/udp"
      - "{{ ark_rcon_port }}:{{ ark_rcon_port }}/tcp"
    env:
      SESSION_NAME: "{{ ark_session_name }}"
      SERVER_MAP: "{{ ark_map }}"
      SERVER_PASSWORD: "{{ ark_password }}"
      ADMIN_PASSWORD: "{{ ark_admin_password }}"
      MAX_PLAYERS: "{{ ark_max_players }}"
      ENABLE_CROSSPLAY: "true"
      DISABLE_BATTLEYE: "true"
      GAME_MOD_IDS: "{{ ark_mods }}"
      SERVER_LIST_PORT: "{{ ark_query_port }}"
      GAME_CLIENT_PORT: "{{ ark_game_port }}"
      UDP_SOCKET_PORT: "{{ ark_game_port|int + 1 }}"
      RCON_PORT: "{{ ark_rcon_port }}"
      TZ: "{{ timezone }}"
      PUID: "{{ ark_user_id }}"
      PGID: "{{ ark_group_id }}"
    restart_policy: unless-stopped
    memory: "{{ ark_memory }}"

- name: Fix arkmanager steamcmd_user setting
  ansible.builtin.lineinfile:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/arkmanager/arkmanager.cfg"
    regexp: '^steamcmd_user='
    line: steamcmd_user=steam

- name: Wait until the file GameUserSettings.ini is present before continuing
  ansible.builtin.wait_for:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/server/ShooterGame/Saved/Config/LinuxServer/GameUserSettings.ini"
    sleep: 10
    timeout: 600

- name: Wait until the file Game.ini is present before continuing
  ansible.builtin.wait_for:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/server/ShooterGame/Saved/Config/LinuxServer/Game.ini"
    sleep: 10
    timeout: 600

- name: Make GameUserSettings.ini changes
  community.general.ini_file:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/server/ShooterGame/Saved/Config/LinuxServer/GameUserSettings.ini"
    section: ServerSettings
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    exclusive: false
    no_extra_spaces: true
  loop: "{{ gus_ini | dict2items }}"
  register: gus_config

- name: Make Game.ini changes
  community.general.ini_file:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/server/ShooterGame/Saved/Config/LinuxServer/Game.ini"
    section: /script/shootergame.shootergamemode
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    no_extra_spaces: true
  loop: "{{ game_ini | dict2items }}"
  register: g_config

- name: Configure arkmanager main.cfg
  ansible.builtin.blockinfile:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/arkmanager/instances/main.cfg"
    block: "{{ main_cfg }}"
  register: main_cfg_config

- name: Configure exclusive join
  ansible.builtin.blockinfile:
    path: "{{ ark_data_directory }}/{{ ark_container_name }}/server/ShooterGame/Binaries/Linux/PlayersExclusiveJoinList.txt"
    block: "{{ exclusive_join }}"
    create: true
  register: exclusive_cfg_config
  when: exclusive_join is defined and exclusive_join | length > 0

- name: Restart ARK container
  ansible.builtin.shell: docker restart "{{ ark_container_name }}"
  when: gus_config.changed or g_config.changed or main_cfg_config.changed or exclusive_cfg_config.changed

